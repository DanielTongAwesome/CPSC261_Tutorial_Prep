
# Tutorial #1 Question 2 - Recursive Sum

int rsum(int *start, int count) {
    if (count <= 0) {
        return 0;
    }
    return *start + rsum(start + 1, count - 1)
}

# the code generated by 64-bit intel CPU

#   %esi -- count
#   %rdi -- start

rsum:
.LFB0:
        .cfi_startproc
        xorl    %eax, %eax      # %eax = 0
        testl   %esi, %esi      # is count <= 0?  testl - long word(2 words)
        pushq   %rbx            # save current value of %ebx 
        .cfi_def_cfa_offset 16
        jle     .L3             
        .cfi_offset 3, -16
        movl    (%rdi), %ebx    # %ebx = *start
        subl    $1, %esi        # count = count - 1
        addq    $4, %rdi        # start = start + 1
        call    rsum            # call sum(start + 1, count - 1)
        addl    %ebx, %eax      # add current element to sum

.L3:
        popq    %rbx            # restore old %ebx
        ret                     # done
        .cfi_endproc


